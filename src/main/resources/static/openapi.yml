openapi: 3.0.1

info:
  title: YAPP20-BE-ToGaether API
  description: 모임 기반 플랫폼 ToGaether API 문서
  license:
    name: Apache License Version 2.0
    url: '[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)'
  version: '1.0'
servers:
  - url: https://yapp-togather.com
tags:
  - name: 계정 (Account)
    description: 소셜 로그인 및 계정 관련 API를 제공합니다.
  - name: 모임 (Club)
    description: 모임 관련 API를 제공합니다.
  - name: 토큰 (Token)
    description: 토큰 관련 API를 제공합니다.

paths:

  ############################################# Account #############################################

  /api/accounts/validate-nickname/{nickname}:
    get:
      tags:
        - 계정 (Account)
      summary: 닉네임 검사 API
      description: 닉네임 중복 , 길이를 검사합니다.
      parameters:
        - in: path
          name: nickname
          required: true
          schema:
            type: string
            example: 재롱잔치
          description: 사용자가 입력한 nickname
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountValidationResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'

  /api/accounts/my-page/{nickname}:
    get:
      tags:
        - 계정 (Account)
      summary: 마이페이지 조회 API
      description: 마이페이지 조회 시 요청 파라미터 닉네임 계정의 견주와 강아지 정보를 응답합니다. (타 계정의 마이페이지를 조회할 때는, 즉 myPage 필드가 false인 경우 수정버튼이 보이지 않아야 합니다.)
      parameters:
        - in: path
          name: nickname
          required: true
          schema:
            type: string
            example: 재롱잔치
          description: 해당 닉네임의 마이페이지를 조회
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyPageResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'


  /auth/kakao/callback:
    get:
      tags:
        - 계정 (Account)
      summary: 카카오 로그인 API
      description: IOS에서 카카오 서버로 로그인 요청 시, 카카오에서 Togaether 서버로 콜백 후, 회원가입 여부와 함께 토큰 값을 응답합니다.
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'

  /auth/apple/callback:
    post:
      tags:
        - 계정 (Account)
      summary: 애플 로그인 API
      description: IOS에서 애플 서버로 로그인 요청 시, 애플에서 Togaether 서버로 콜백 후, 회원가입 여부와 함께 토큰 값을 응답합니다.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'

  /api/accounts/sign-up:
    post:
      tags:
        - 계정 (Account)
      summary: 회원가입 API
      description: 회원가입을 진행합니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: 닉네임
                imageFile:
                  type: object
                  description: 이미지 파일(필수 값 아님)
                age:
                  type: integer
                  description: 나이
                sex:
                  type: string
                  description: 성별(MAN, WOMAN, PRIVATE 중 하나)
                city:
                  type: string
                  description: 시/도
                detail:
                  type: string
                  description: 시/군/구
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: 회원 고유 id 값입니다. (pk)
                example: 3
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'

  /api/accounts:
    patch:
      tags:
        - 계정 (Account)
      summary: 계정 수정 API
      description: 마이페이지에서 견주 프로필 수정 및 정보(카테고리, 자기소개) 추가 시 사용합니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: 닉네임
                imageFile:
                  type: object
                  description: 이미지 파일
                age:
                  type: integer
                  description: 나이
                sex:
                  type: string
                  description: 성별(MAN, WOMAN, PRIVATE 중 하나)
                city:
                  type: string
                  description: 시/도
                detail:
                  type: string
                  description: 시/군/구
                selfIntroduction:
                  type: string
                  description: 자기소개
                interestCategories:
                  type: array
                  items:
                    properties:
                      field:
                        type: string
                        example: 필드 이름
                      value:
                        type: string
                        example: 클라리언트가 보낸 값
                      reason:
                        type: string
                        example: 에러 이유
                  description: 관심 카테고리들 ex) WALK, DOG_CAFE ...
      responses:
        '200':
          description: OK
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'


  ############################################# Token #############################################

  /api/tokens/re-issuance:
    post:
      tags:
        - 토큰 (Token)
      summary: 토큰 재발급
      description: access token 만료시, refresh token을 통해 재발급받습니다. (access, refresh 두 토큰 모두 재발급 됩니다.)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'

  /api/tokens/expire:
    delete:
      tags:
        - 토큰 (Token)
      summary: 로그아웃
      description: 서버에서 refresh token을 삭제합니다. (클라이언트에서는 access,  refresh 토큰 모두 폐기)
      responses:
        '200':
          description: OK
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'

  ############################################# Club #############################################

  /api/clubs/search:
    get:
      tags:
        - 모임 (Club)
      summary: 모임 검색 및 필터링
      description: Query String을 통해 데이터를 요청받고, 조건에 맞는 모임을 반환합니다.
      parameters:
        - name: request
          in: query
          description: SearchingRequest
          required: true
          schema:
            $ref: '#/components/schemas/SearchingRequest'
        - name: searchingType
          in: query
          description: 검색어를 통한 검색은 word, 카테고리 검색은 category
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchingResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'
  /api/clubs/search/range:
    get:
      tags:
        - 모임 (Club)
      summary: 주어진 범위 내에 있는 모임 조회
      description: 좌상단, 우하단 위도 경도를 통해 해당 범위 내에 있는 모임을 조회합니다
      operationId: searchingWithinRange
      parameters:
        - name: request
          in: query
          description: SearchingWithinRangeClubRequest
          required: true
          schema:
            $ref: '#/components/schemas/SearchingWithinRangeClubRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchingWithinRangeClubResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'
  /api/clubs/search/simple/{club-id}:
    get:
      tags:
        - 모임 (Club)
      summary: FIN 클릭 시 간단한 모임 조회
      description: 유저의 위도, 경도, 모임의 식별자 값을 통해 모임의 간단한 정보를 조회합니다
      parameters:
        - name: request
          in: query
          description: SearchingSimpleClubRequest
          required: true
          schema:
            $ref: '#/components/schemas/SearchingSimpleClubRequest'
        - name: club-id
          in: path
          description: 모임의 식별자 값
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchingSimpleClubResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'

  /api/clubs:
    get:
      tags:
        - 모임 (Club)
      summary: 모임 목록 조회 API
      description: 참여중인 모임, 본인이 방장인 모임, 본인이 참여했으며 종료된 모임을 조건에 따라 조회합니다.
      parameters:
        - name: cursor-id
          in: query
          description: 모임 목록 화면에서 마지막 모임 id값에 해당합니다. (화면 기준 가장 아래 위치한 모임)
          required: false
          schema:
            type: integer
          example: 10
        - name: condition
          in: query
          description: 설명에 명시한 조회 조건입니다. (I_AM_PARTICIPATING , I_AM_LEADER, I_AM_PARTICIPATED_AND_EXCEED)
          required: false
          schema:
            type: string
          example: I_AM_PARTICIPATING
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClubFindResponse'
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'

    ############################################# Pet #############################################
  /api/pets:
    get:
      tags:
        - 강아지 (Pet)
      summary: FIN 클릭 시 간단한 모임 조회
      description: 유저의 위도, 경도, 모임의 식별자 값을통해 모임의 간단한 정보를 조회합니다
      parameters:
        - name: request
          in: query
          description: SearchingSimpleClubRequest
          required: true
          schema:
            $ref: '#/components/schemas/SearchingSimpleClubRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: 저장된 애완견 고유 식별자 값입니다.
                example: 5
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'
  /api/pets/{pet-id}:
    delete:
      tags:
        - 강아지 (Pet)
      summary: 강아지 정보 삭제 API
      description: 강아지의 식별값을 받아 강아지 정보를 삭제합니다.
      parameters:
        - name: pet-id
          in: path
          required: true
      responses:
        '200':
          description: OK
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'
    put:
      tags:
        - 강아지 (Pet)
      summary: 강아지 정보 변경 API
      description: 강아지의 식별값과 변경 사항을 받아 강아지 정보를 수정합니다. (이미지를 제외한 나머지 프로퍼티는 변경사항이 없으면 기존 데이터 그대로 주시면 됩니다. name이 철수인데 name을 변경하지 않을 경우에 그대로 철수 보내주시면 됩니다. 이미지 파일은 변경사항이 없다면 null 값을 보내주시면 됩니다.
      parameters:
        - name: pet-id
          in: path
          required: true
        - name: request
          in: query
          description: PetRequest
          required: true
          schema:
            $ref: '#/components/schemas/PetRequest'
      responses:
        '200':
          description: OK
        '401':
          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseInfo'


components:
  schemas:

    ############################################# Exception #############################################

    ExceptionResponse:
      type: object
      properties:
        message:
          type: string
          example: 유효하지 않은 입력 값입니다.
        status:
          type: string
          example: 400
        errors:
          type: array
          items:
            properties:
              field:
                type: string
                example: 필드 이름
              value:
                type: string
                example: 클라리언트가 보낸 값
              reason:
                type: string
                example: 에러 이유
    ExceptionResponseInfo:
      type: object
      properties:
        status:
          type: string
          example: 401
        message:
          type: string
          example: 만료된 JWT토큰입니다.


    ############################################# Account #############################################

    SignInResponse:
      type: object
      properties:
        accessToken:
          title: access token
          type: string
          description: 인증 토큰
          example: eyhidfuiiasdjivxJasiC.etjvcxJxodfo93fjixCVKcfkld.RKOFD045fdBkzls3Q
        refreshToken:
          title: refresh token
          type: string
          description: access token 재발급을 위한 토큰
          example: fdsdfu9fjcXjivxJasiC.ezZFD5nopjJ453fxfji6FCjVKcfkld.fC2dFD04kzls4V
        firstAccount:
          title: 계정 존재 여부
          type: boolean
          description: 이미 존재하는 회원인지 여부 확인
          example: true
      description: 소셜 로그인 응답 객체

    AccountValidationResponse:
      type: object
      properties:
        unique:
          type: boolean
          description: 중복 검사 결과 (중복되지 않으면 true)
        satisfyLengthCondition:
          type: boolean
          description: 길이 만족 여부 결과 (길이 만족하면 true)
      description: nickname 검사 결과 (두 필드 모두 true이면 통과)

    MyPageResponse:
      type: object
      properties:
        myPage:
          type: boolean
          example: true
          description: 현재 로그인한 계정의 마이페이지를 조회하는지 여부를 나타냅니다.(true 이면 본인의 마이페이지이므로 정보 수정 버튼이 보여야 합니다.)
        accountInfo:
          type: object
          properties:
            nickname:
              type: string
              example: 재롱잔치
            address:
              type: string
              example: 서울시 강남구
            age:
              type: string
              example: 10살
            sex:
              type: string
              example: MAN
            selfIntroduction:
              type: string
              example: 재롱이 견주입니다~
            interestCategories:
              type: string
              example:
                - DOG_CAFE
                - WALK
                - PLAY_GROUND
            imageUrl:
              type: string
              example: https://dasko.com
        petInfos:
          type: array
          items:
            type: object
          example:
            - nickname: 재롱이
              breed: 말티즈
              age: 3살
              sex: MALE
              tags:
                - 소식
                - 산책 좋아함
                - 귀여움
              imageUrl: https://pet.com
            - nickname: 밀란이
              breed: 리트리버
              age: 4살
              sex: FEMALE
              tags:
                - 대형견
                - 산책 좋아함
                - 간식 귀신
              imageUrl: https://bvckpvck.com

    ############################################# Token #############################################

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: 인증 토큰
          example: eyhidfuiiasdjivxJasiC.etjvcxJxodfo93fjixCVKcfkld.RKOFD045fdBkzls3Q
        refreshToken:
          type: string
          description: access token 재발급을 위한 토큰
          example: fdsdfu9fjcXjivxJasiC.ezZFD5nopjJ453fxfji6FCjVKcfkld.fC2dFD04kzls4V
      description: 토큰 응답 객체


    ############################################# Club #############################################

    SearchingRequest:
      type: object
      properties:
        searchingWord:
          title: 검색어
          type: string
          description: 카테고리를 통한 검색일 경우, 해당 값은 null
        category:
          type: string
          enum:
            - WALK
            - DOG_CAFE
        eligibleBreed:
          type: string
          example: "웰시코기"
        petSizeType:
          type: string
          enum:
            - LARGE
            - MEDIUM
            - SMALL
            - ALL
        eligibleSex:
          type: string
          enum:
            - MAN
            - WOMAN
            - ALL
        participateMin:
          title: 최소 참여 인원 필터링
          type: integer
          description: 3명 이하일 경우 해당 값은 0으로 전송
          format: int32
        participateMax:
          title: 최대 참여 인원 필터링
          type: integer
          format: int32
        page:
          type: integer
          description: 몇 번째 게시물인지 나타낸다
          format: int32
        startLatitude:
          type: number
          description: 사용자 위도
          format: double
        startLongitude:
          type: number
          description: 사용자 경도
          format: double
        status:
          type: string
          enum:
            - AVAILABLE
            - PERSONNEL_FULL
            - END
      description: 모임 조회 및 필터링 요청 API
    SearchingResponse:
      type: array
      items:
        properties:
          category:
            type: string
            enum:
              - WALK
              - DOG_CAFE
          title:
            type: string
            example: "산책할사람!"
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          eligiblePetSizeTypes:
            type: array
            items:
              type: string
            example:
              - LARGE
              - MEDIUM
          eligibleBreeds:
            type: array
            items:
              type: string
            example:
              - 말티즈
              - 웰시코기
              - 리트리버
          eligibleSex:
            type: string
            example: "ALL"
          maximumPeople:
            type: integer
            example: "6"
          participants:
            type: integer
            example: "5"
          latitude:
            type: number
            format: double
            example: "2,174"
          longitude:
            type: number
            format: double
            example: "41,4033803"
          meetingPlace:
            type: string
            example: "서울 강남역 10번 출구"
          distance:
            type: integer
            example: "233m"
          status:
            type: string
            enum:
              - AVAILABLE
              - PERSONNEL_FULL
              - END
    SearchingWithinRangeClubRequest:
      type: object
      properties:
        upperLeftLatitude:
          title: 좌상단 위도
          type: number
          format: double
        upperLeftLongitude:
          title: 좌상단 경도
          type: number
          format: double
        bottomRightLatitude:
          title: 우하단 위도
          type: number
          format: double
        bottomRightLongitude:
          title: 우하단 경도
          type: number
          format: double
    SearchingWithinRangeClubResponse:
      type: array
      items:
        properties:
          clubId:
            type: integer
            description: 모임 식별자 값
            format: int64
          category:
            type: string
            enum:
              - WALK
              - DOG_CAFE
          clubLatitude:
            title: 모임 위도
            type: number
            format: double
          clubLongitude:
            title: 모임 경도
            type: number
            format: double
    SearchingSimpleClubRequest:
      type: object
      properties:
        userLatitude:
          title: 유저 위도
          type: number
          format: double
        userLongitude:
          title: 유저 경도
          type: number
          format: double
    SearchingSimpleClubResponse:
      type: object
      properties:
        category:
          type: string
          enum:
            - WALK
            - DOG_CAFE
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        eligiblePetSizeTypes:
          type: array
          items:
            type: string
          example:
            - LARGE
            - MEDIUM
        eligibleBreeds:
          type: array
          items:
            type: string
          example:
            - 말티즈
            - 웰시코기
            - 리트리버
        eligibleSex:
          type: string
        maximumPeople:
          type: integer
        participants:
          type: integer
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        meetingPlace:
          type: string
        distance:
          type: number
          format: double
        clubStatus:
          type: string
          enum:
            - AVAILABLE
            - END

    ClubFindResponse:
      type: object
      properties:
        hasNotClub:
          type: boolean
          example: true
          description: 더 이상 조회할 모임이 없을 때 true를 리턴합니다.(마지막 목록 화면에서 아래로 스크롤을 했을 때)
        clubInfos:
          type: array
          items:
            type: object
          example:
            - clubId: 1
              title: 산책하실분~
              category: WALK
              meetingPlace: 서울 한강공원
              startDate: 2022-06-25T15:46:08.962Z
              endDate: 2022-06-25T15:46:08.962Z
              eligibleBreeds:
                - 말티즈
                - 리트리버
                - 불독
              eligiblePetSizeTypes:
                - MEDIUM
                - SMALL
              eligibleSex: ALL
              maximumPeople: 5
              participants: 2
            - clubId: 2
              title: 박람회 모임 모집
              category: EXPOSITION
              meetingPlace: 서울 한강공원
              startDate: 2022-06-25T15:46:08.962Z
              endDate: 2022-06-25T15:46:08.962Z
              eligibleBreeds:
              eligiblePetSizeTypes:
                - SMALL
              eligibleSex: WOMAN
              maximumPeople: 4
              participants: 1


    ############################################# Pet #############################################

    PetRequest:
      type: object
      properties:
        name:
          title: 강아지 이름
          type: string
          example: 철수
        year:
          title: 강아지 태어난 년도
          type: integer
          example: "2022"
        month:
          title: 강아지 태어난 달
          type: integer
          example: "7"
        breed:
          title: 견종
          type: string
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
        neutering:
          title: 중성화 여부
          type: boolean
        sizeType:
          type: string
          enum:
            - LARGE
            - MEDIUM
            - SMALL
        tags:
          type: array
          description: 강아지 성격
          items:
            type: string
          example:
            - 활발
            - 사나움
        imageFile:
          type: object
          description: 이미지 파일