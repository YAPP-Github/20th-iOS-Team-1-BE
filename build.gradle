buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	//querydsl
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.yapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//redission
	implementation 'org.redisson:redisson-spring-boot-starter:3.17.4'

	//elastic search
	implementation 'org.springframework.data:spring-data-elasticsearch:4.3.0'

	// querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'

	// swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.9'

	// Jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

	// JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//mapstruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	testImplementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	testImplementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	//testcontainers
	testImplementation "org.testcontainers:testcontainers:1.17.3"
	testImplementation "org.testcontainers:junit-jupiter:1.17.3"
	testImplementation "org.testcontainers:mysql:1.17.3"
}

def test = tasks.named('test') {
	useJUnitPlatform() {
		excludeTags "integrationTest"
	}
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
}

def integrationTest = tasks.register("integrationTest", Test) {
	useJUnitPlatform {
		includeTags "integrationTest"
	}
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
}

tasks.named("check") {
	dependsOn integrationTest
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
