name: Togather

env:
  TOGATHER_JASYPT_PASSWORD: ${{ secrets.TOGATHER_JASYPT_PASSWORD }}

on:
  push:
    branches: [ feature/4-Building_CI/CD_Pipeline ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx # 도커 컨테이너 빌더 드라이버를 사용하여 빌더를 만들고 부팅. 필수는 아니지만 다중 플랫폼 이미지를 빌드하고 캐시를 내보는데 사용하는 것이 좋음
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 # docker 레지스트리에 대한 로그인 처리
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]
    steps:
      - name: Docker run
        run: |
            sudo docker stop yapp && docker rm yapp && docker rmi $ {{ secrets.DOCKER_TAG }}
            sudo docker run -d -p 8080:8080 --name yapp -e TOGATHER_JASYPT_PASSWORD=${{ secrets.TOGATHER_JASYPT_PASSWORD }} ${{ secrets.DOCKER_TAG }}